{
  "hash": "e22705ca8004d5b81cdb14a71feaf633",
  "result": {
    "markdown": "---\ntitle: \"Code from slides\"\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(GenomicRanges)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: stats4\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: BiocGenerics\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'BiocGenerics'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: S4Vectors\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'S4Vectors'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:utils':\n\n    findMatches\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: IRanges\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: GenomeInfoDb\n```\n:::\n\n```{.r .cell-code}\nlibrary(plyranges)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'plyranges'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:IRanges':\n\n    slice\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n\n```{.r .cell-code}\ngr <- GRanges(seqnames = \"chr1\", \n              strand = c(\"+\", \"-\"), \n              ranges = IRanges(start = c(102012, 520211), \n                               end = c(120303, 526211)),\n              gene_id = c(1001, 2151), \n              score = c(10, 25))\ngr\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGRanges object with 2 ranges and 2 metadata columns:\n      seqnames        ranges strand |   gene_id     score\n         <Rle>     <IRanges>  <Rle> | <numeric> <numeric>\n  [1]     chr1 102012-120303      + |      1001        10\n  [2]     chr1 520211-526211      - |      2151        25\n  -------\n  seqinfo: 1 sequence from an unspecified genome; no seqlengths\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwidth(gr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 18292  6001\n```\n:::\n\n```{.r .cell-code}\ngr[gr$score > 15, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGRanges object with 1 range and 2 metadata columns:\n      seqnames        ranges strand |   gene_id     score\n         <Rle>     <IRanges>  <Rle> | <numeric> <numeric>\n  [1]     chr1 520211-526211      - |      2151        25\n  -------\n  seqinfo: 1 sequence from an unspecified genome; no seqlengths\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngr |> \n  filter(score > 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGRanges object with 1 range and 2 metadata columns:\n      seqnames        ranges strand |   gene_id     score\n         <Rle>     <IRanges>  <Rle> | <numeric> <numeric>\n  [1]     chr1 520211-526211      - |      2151        25\n  -------\n  seqinfo: 1 sequence from an unspecified genome; no seqlengths\n```\n:::\n\n```{.r .cell-code}\ngr |> \n  filter(score > 15) |> \n  width()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6001\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plyranges)\ngr <- \n  data.frame(seqnames = sample(c(\"chr1\", \"chr2\"), 7, replace = TRUE),\n             strand = sample(c(\"+\", \"-\"), 7, replace = TRUE),\n             score = runif(7),\n             start = 1:7,\n             width = 10) %>%\n  as_granges()\ngr\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGRanges object with 7 ranges and 1 metadata column:\n      seqnames    ranges strand |     score\n         <Rle> <IRanges>  <Rle> | <numeric>\n  [1]     chr1      1-10      + |  0.519716\n  [2]     chr2      2-11      - |  0.478834\n  [3]     chr1      3-12      - |  0.487161\n  [4]     chr2      4-13      - |  0.677381\n  [5]     chr2      5-14      - |  0.181075\n  [6]     chr1      6-15      - |  0.874615\n  [7]     chr2      7-16      + |  0.615209\n  -------\n  seqinfo: 2 sequences from an unspecified genome; no seqlengths\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngr %>%\n  group_by(strand) %>% \n  summarize(mean_score = mean(score))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDataFrame with 2 rows and 2 columns\n  strand mean_score\n   <Rle>  <numeric>\n1      +   0.567462\n2      -   0.539813\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}